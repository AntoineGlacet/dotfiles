# Usage: indirect_expand PATH -> $PATH
indirect_expand() {
	env | sed -n "s/^$1=//p"
}

# Usage: pathremove /path/to/bin [PATH]
# Eg, to remove ~/bin from $PATH
#     pathremove ~/bin PATH
pathremove() {
	local IFS=':'
	local newpath
	local dir
	local var=${2:-PATH}
	for dir in $(indirect_expand "$var"); do
		IFS=''
		if [ "$dir" != "$1" ]; then
			newpath=$newpath:$dir
		fi
	done
	eval "$var=\${newpath#:}"
	export "$var"
}

# Usage: pathprepend /path/to/bin [PATH]
# Eg, to prepend ~/bin to $PATH
#     pathprepend ~/bin PATH
pathprepend() {
	# if the path is already in the variable,
	# remove it so we can move it to the front
	pathremove "${1}" "${2}"
	local var="${2:-PATH}"
	local value
	value=$(indirect_expand "$var")
	eval "$var=\${1}\${value:+:${value}}"
	export "$var"
}

# Usage: pathappend /path/to/bin [PATH]
# Eg, to append ~/bin to $PATH
#     pathappend ~/bin PATH
pathappend() {
	pathremove "${1}" "${2}"
	local var=${2:-PATH}
	local value
	value=$(indirect_expand "$var")
	eval "$var=\${value:+${value}:}\${1}"
	export "$var"
}

# Usage: ssource filename
ssource() {
	[[ -r "$1" ]] && . "$1"
}

# List all tmux panes.
# Output is
# <session_name>#<window_index>.<pane_index> <window_name>
#   <pstree of pane>
tmuxls() {
	while read -r pane; do
		IFS="|" read PANE_ID PANE_INDEX WINDOW_INDEX SESSION_NAME WINDOW_NAME <<<"$pane"
		echo "${SESSION_NAME}#${WINDOW_INDEX}.${PANE_INDEX} ${WINDOW_NAME}"
		pstree -p -a -U "$PANE_ID" | sed 's/^/  /'
		echo "-----"
	done <<<$(tmux list-panes -a -F "#{pane_pid}|#{pane_index}|#{window_index}|#{session_name}|#{window_name}")
}

## KAP proxy functions
# Function to enable proxy
enable_proxy() {
	export http_proxy="http://192.168.3.16:8080"
	export https_proxy="http://192.168.3.16:8080"
	export ftp_proxy="http://192.168.3.16:8080"
	export no_proxy="localhost,127.0.0.1,.mycompany.com"
	export ALL_PROXY="socks5://192.168.3.16:1080"

	# For Git
	git config --global http.proxy $http_proxy
	git config --global https.proxy $https_proxy

	# For SSH (global, excluding private IP ranges)
	if ! grep -q "ProxyCommand" ~/.ssh/config; then
		echo "Adding global SSH proxy configuration..."
		echo -e "Host !10.*.*.* !172.16.*.* !192.168.*.* !169.254.*.*\n\tProxyCommand nc -X connect -x 192.168.3.16:8080 %h %p" >>~/.ssh/config
	fi

	echo "Proxy enabled"
}

# Function to disable proxy
disable_proxy() {
	unset http_proxy
	unset https_proxy
	unset ftp_proxy
	unset no_proxy
	unset ALL_PROXY

	# For Git
	git config --global --unset http.proxy
	git config --global --unset https.proxy

	# For SSH (global)
	if grep -q "ProxyCommand" ~/.ssh/config; then
		echo "Removing global SSH proxy configuration..."
		sed -i '/ProxyCommand/d' ~/.ssh/config
		sed -i '/Host !10.*.*.* !172.16.*.* !192.168.*.* !169.254.*.*$/d' ~/.ssh/config
	fi

	echo "Proxy disabled"
}
