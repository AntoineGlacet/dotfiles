# === Powerlevel10k Instant Prompt (keep at top) ===
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# === Path ===
export PATH="$HOME/bin:/usr/local/bin:$PATH"

# === Oh My Zsh ===
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="powerlevel10k/powerlevel10k"

# === Oh My Zsh Options ===
COMPLETION_WAITING_DOTS="true"
# CASE_SENSITIVE="true"
# HYPHEN_INSENSITIVE="true"
# DISABLE_AUTO_UPDATE="true"
# ENABLE_CORRECTION="true"
# HIST_STAMPS="yyyy-mm-dd"

# === Plugins ===
plugins=(
  z
  golang
  zsh-autosuggestions
  zsh-syntax-highlighting
)

# Safe sourcing
if [[ -f "$ZSH/oh-my-zsh.sh" ]]; then
  source "$ZSH/oh-my-zsh.sh"
else
  echo "[WARN] Oh My Zsh not found at $ZSH" >&2
fi

# === Language / Editor ===
export LANG="en_US.UTF-8"
export EDITOR="nvim"

# === User Config ===
[[ -f ~/.shell/env ]] && source ~/.shell/env
[[ -f ~/.shell/aliases ]] && source ~/.shell/aliases
[[ -f ~/.shell/keybindings ]] && source ~/.shell/keybindings

# === Direnv Hook ===
if command -v direnv >/dev/null 2>&1; then
  _direnv_hook() { eval "$(direnv export zsh)"; }
  typeset -ag precmd_functions
  if [[ -z ${precmd_functions[(r)_direnv_hook]} ]]; then
    precmd_functions+=_direnv_hook
  fi
fi

# === Powerlevel10k Config ===
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh

# === Node Version Manager (nvm) ===
export NVM_DIR="$HOME/.nvm"
[[ -s "$NVM_DIR/nvm.sh" ]] && source "$NVM_DIR/nvm.sh"
[[ -s "$NVM_DIR/bash_completion" ]] && source "$NVM_DIR/bash_completion"

# === pnpm ===
export PNPM_HOME="$HOME/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac

# === pyenv ===
if command -v pyenv >/dev/null 2>&1; then
  export PATH="$HOME/.pyenv/bin:$PATH"
  eval "$(pyenv init --path)"
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
fi
